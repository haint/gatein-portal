.ClearFix { 
  &:after {
	content: "";
	display: block;
	height: 0;
	clear: both;
	visibility: hidden;
  } 
}

.ClearFix {
  *display: inline-block;
  *zoom: 1;
  *display: block
}

.gtnFloatLeft() {
	.dir(@gtnDir);
	.dir(lt){
		float: left;
	   
	}
	.dir(rt){
		float:right;   
	}
}

.gtnFloatRight() {
	.dir(@gtnDir);
	.dir(lt){
		float: right;
	   
	}
	.dir(rt){
		float:left;   
	}
}

.gtnTextAlignLeft() {
	.dir(@gtnDir);
	.dir(lt)  {
	  text-align: left;
	}
	.dir(rt) {
	  text-align: right;
	}
}

.gtnTextAlignRight() {
	.dir(@gtnDir);
	.dir(lt)  {
	  text-align: left;
	}
	.dir(rt) {
	  text-align: right;
	}
}

.gtnPadding(@top, @right, @bottom, @left) {
	.dir(@gtnDir);
	.dir(lt){        
		padding-top:@top;
		padding-right: @right;
		padding-bottom: @bottom;
		padding-left: @left;
    }
	.dir(rt) {
		padding-top:@top;
		padding-right: @left;
		padding-bottom: @bottom;
		padding-left: @right;
	}
}

.gtnPadding(@values) {
	padding: @values;
}

.gtnMargin(@top, @right, @bottom, @left) {
	.dir(@gtnDir);
	.dir(lt){        
		margin-top:@top;
		margin-right: @right;
		margin-bottom: @bottom;
		margin-left: @left;
    }
	.dir(rt) {
		margin-top:@top;
		margin-right: @left;
		margin-bottom: @bottom;
		margin-left: @right;
	}
}

.gtnMargin(@values) {
	margin: @values;
}

.gtnBordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
	border-top: solid 1px @top-color;
	border-left: solid 1px @left-color;
	border-right: solid 1px @right-color;
	border-bottom: solid 1px @bottom-color;
}

.gtnBorderedAll(@borderColor) {
	border:solid 1px  @borderColor;
} 

.gtnDropShadow(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
	box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}

.gtnBorderRadius(@topright: @gtnDecoratorRadius, @bottomright: @gtnDecoratorRadius, @bottomleft: @gtnDecoratorRadius, @topleft: @gtnDecoratorRadius) {
	border-top-right-radius: @topright;
	border-bottom-right-radius: @bottomright;
	border-bottom-left-radius: @bottomleft;
	border-top-left-radius: @topleft;
	background-clip: padding-box; 
}

.gtnBorderRadiusAll(@values) {
	border-radius: @values;
}

.gtnOpacity(@opacity: 0.5) {
	opacity: @opacity;
	filter: alpha(opacity=@opacity);
}

.gtnInnerShadow(@horizontal: 0, @vertical: 1px, @blur: 2px, @alpha: 0.4) {
	box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}

.gtnBoxShadow(@arguments) {
	box-shadow: @arguments;
}

.gtnBackgroundImageDir(@backgroundImageleft,@backgroundImageRight) {	
	.dir(@gtnDir);
	.dir(lt){
		background-image: url(@backgroundImageleft);
	}
	.dir(rt) {
		background-image: url(@backgroundImageRight);
	}	
	background-repeat: no-repeat;
}
	
.gtnBackgroundPositionDir(@positionLeft,@positionRight) {
	.dir(@gtnDir);
	.dir(lt){        
		background-position: ~'@{positionLeft}'; 
	}
	.dir(rt) {
		background-position: ~'@{positionRight}'; 
	}  
}

.gtnBackgroundImage(@backgroundImageleft,@backgroundImageRight,@repeat: no-repeat,@positionLeft: 'center center' ,@positionRight: 'center center',@backgroundColor: transparent) {	
	.gtnBackgroundImageDir(@backgroundImageleft,@backgroundImageRight);	
	.gtnBackgroundPositionDir(@positionLeft,@positionRight);
	background-repeat: @repeat;
	background-color: @backgroundColor;
}

.gtnSize (@width: auto,@height: auto){
	width: @width;
	height: @height;
}

.gtnVerticalAlginCenter(@height,@line-height) {
	height: @height;
	line-height: @line-height;
}


.gtnBoxDecorator(@border-color : @gtnColorBorder,@padding : 10px ,@margin: auto,@borderRadius: @gtnDecoratorRadius,@width: auto ,@height: auto,@background: transparent) {
	.gtnBorderRadiusAll(@borderRadius);
	.gtnPadding(@padding);
	.gtnMargin(@margin);
	.gtnBorderedAll(@border-color);
	.gtnSize (@width,@height);
	background: @background;
}
